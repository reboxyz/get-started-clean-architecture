Getting Started with Clean Architecture

1, 2, 3, 4, 6, 8, 9
10, 11, 12, 13, 14, 
15, 16, 17, 18, 19,
20, 21, 22, 23
24, 25, 26, 27, 28, 29
30, 31, 32
33, 34, 35, 36, 37
38, 39, 40, 41, 42, 43
44, 45, 46, 47, 48, 49, 50
51, 52, 53, 54, 55, 56, 57
58, 59, 60, 61, 62, 63, 64


mkdir GymManagement
cd GymManagement 
dotnet new sln   # dotnet sln —name “GymManagement”
dotnet new webapi -o GymManagement.Api
dotnet new classlib -o GymManagement.Application
dotnet new classlib -o GymManagement.Domain     
dotnet new classlib -o GymManagement.Infrastructure
dotnet new classlib -o GymManagement.Contracts
# Api references Application project
dotnet add GymManagement.Api reference GymManagement.Application 

# Infrastructure references Application project
dotnet add GymManagement.Infrastructure reference GymManagement.Application 

# Application references Domain Project
dotnet add GymManagement.Application reference GymManagement.Domain 

# Api references Contracts Project
 dotnet add GymManagement.Api reference GymManagement.Contracts 

# Add projects to sln
dotnet sln add **/**.csproj  # dotnet sln add (ls -r **/**.csproj) # for windows
dotnet sln add GymManagement.Contracts 

dotnet run --project GymManagement.Api

# Very important! Presentation Layer or Api references Infrastructure  which seems a violation but not really 
dotnet add Api reference GymManagement.Infrastructure

# Very important note! 
The common interfaces should be designed in the “Application” but the implementation should be in the “Infrastructure”.
The Application has no reference to the Infrastructure. Only the API or Presentation has both references to Application and Infrastructure.

dotnet new gitignore

VS Code Extensions:
REST Client

EF Core Migration:
dotnet ef migrations add InitialCreate -p GymManagement.Infrastructure -s GymManagement.Api

